{"version":3,"sources":["components/Editor.js","components/Options.js","components/Input.js","components/Output.js","keys.js","App.js","serviceWorker.js","index.js"],"names":["PyEditor","lang","code","setCode","className","value","onValueChange","edcode","highlight","languages","py","padding","style","fontFamily","fontSize","background","color","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","minHeight","boxShadow","java","c","Options","setLang","runCode","onChange","e","target","onClick","Input","input","setInput","border","cols","rows","Output","output","readOnly","keys","id","secret","App","useState","setOutput","Editor","data","clientId","clientSecret","script","language","versionIndex","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"uMAgFeA,G,8BAtEE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/B,OAAa,IAATF,EAEF,yBAAKG,UAAU,eACd,kBAAC,IAAD,CACCC,MAAOH,EACPI,cAAe,SAACC,GAAD,OAAYJ,EAAQI,IACnCC,UAAW,SAACD,GAAD,OAAYC,oBAAUD,EAAQE,YAAUC,KACnDC,QAAS,GACTC,MAAO,CACNC,WAAY,sCACZC,SAAU,GACVC,WAAY,UACZC,MAAO,OACPC,qBAAsB,OACtBC,wBAAyB,OACzBC,uBAAwB,OACxBC,UAAW,OACXC,UAAW,qCAKI,IAATpB,EAET,yBAAKG,UAAU,eACd,kBAAC,IAAD,CACCC,MAAOH,EACPI,cAAe,SAACC,GAAD,OAAYJ,EAAQI,IACnCC,UAAW,SAACD,GAAD,OAAYC,oBAAUD,EAAQE,YAAUa,OACnDX,QAAS,GACTC,MAAO,CACNC,WAAY,sCACZC,SAAU,GACVC,WAAY,UACZC,MAAO,OACPC,qBAAsB,OACtBC,wBAAyB,OACzBC,uBAAwB,OACxBC,UAAW,OACXC,UAAW,qCAOd,yBAAKjB,UAAU,eACd,kBAAC,IAAD,CACCC,MAAOH,EACPI,cAAe,SAACC,GAAD,OAAYJ,EAAQI,IACnCC,UAAW,SAACD,GAAD,OAAYC,oBAAUD,EAAQE,YAAUc,IACnDZ,QAAS,GACTC,MAAO,CACNC,WAAY,sCACZC,SAAU,GACVC,WAAY,UACZC,MAAO,OACPC,qBAAsB,OACtBC,wBAAyB,OACzBC,uBAAwB,OACxBC,UAAW,OACXC,UAAW,uCChCFG,EAtCC,SAAC,GAAyC,IAAvCvB,EAAsC,EAAtCA,KAAMwB,EAAgC,EAAhCA,QAAStB,EAAuB,EAAvBA,QAASuB,EAAc,EAAdA,QAK1C,OACC,yBAAKtB,UAAU,iCACd,wBAAIA,UAAU,eAAd,WACA,yBAAKA,UAAU,cACd,mDACA,4BACCC,MAAOJ,EACP0B,SAXqB,SAACC,GACzBH,EAAQG,EAAEC,OAAOxB,QAWdD,UAAU,gBAEV,4BAAQC,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,QAED,yBAAKD,UAAU,yBACd,4BACC0B,QAAS,kBAAMJ,KACftB,UAAU,+BAFX,YAMA,4BACC0B,QAAS,kBAAM3B,EAAQ,2BACvBC,UAAU,8BAFX,kBCJU2B,EAtBD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAKvB,OACC,yBAAK7B,UAAU,+BACd,wBAAIA,UAAU,eAAd,SACA,yBAAKA,UAAU,cACd,8BACCQ,MAAO,CAAEG,WAAY,cAAemB,OAAQ,OAC5CC,KAAK,KACLC,KAAK,IACLhC,UAAU,eACVC,MAAO2B,EACPL,SAdsB,SAACC,GAC1BK,EAASL,EAAEC,OAAOxB,aCcLgC,EAhBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjB,OACC,yBAAKlC,UAAU,+BACd,wBAAIA,UAAU,eAAd,UACA,8BACCQ,MAAO,CAAEG,WAAY,cAAemB,OAAQ,OAC5CC,KAAK,KACLC,KAAK,IACLhC,UAAU,eACVC,MAAOiC,EACPC,UAAQ,MCPGC,EALF,CACZC,GAAI,mCACJC,OAAQ,oECwEMC,EAjEH,WAAO,IAAD,EACOC,mBAAS,GADhB,mBACV3C,EADU,KACJwB,EADI,OAEOmB,mBAAS,0BAFhB,mBAEV1C,EAFU,KAEJC,EAFI,OAGSyC,mBAAS,iCAHlB,mBAGVZ,EAHU,KAGHC,EAHG,OAIWW,mBAAS,4BAJpB,mBAIVN,EAJU,KAIFO,EAJE,KAqCjB,OACC,yBAAKzC,UAAU,kBACd,yBAAKA,UAAU,YACd,kBAAC0C,EAAD,CAAQ7C,KAAMA,EAAMC,KAAMA,EAAMC,QAASA,KAE1C,yBAAKC,UAAU,aACd,kBAAC,EAAD,CACCH,KAAMA,EACNwB,QAASA,EACTtB,QAASA,EACTuB,QAzCY,WACf,IAUMqB,EAAO,CACZC,SAAUR,EAAKC,GACfQ,aAAcT,EAAKE,OACnBQ,OAAQhD,EACRiD,SAZY,IAATlD,EACQ,UACQ,IAATA,EACC,OAEA,MAQXmD,aAAc,GAGfC,MAAM,qCAAsC,CAC3CC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAUX,KAEpBY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAASf,EAAUe,EAAItB,WAC5BwB,OAAM,SAACC,GAAD,OAASlB,EAAU,yBAA2BkB,EAAIC,cAiBzD,yBAAK5D,UAAU,YACd,yBAAKA,UAAU,2BACd,kBAAC,EAAD,CAAO4B,MAAOA,EAAOC,SAAUA,MAGjC,yBAAK7B,UAAU,YACd,yBAAKA,UAAU,4BACd,kBAAC,EAAD,CAAQkC,OAAQA,QCvDD2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDwHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdjB,OAAM,SAAAE,GACLgB,QAAQhB,MAAMA,EAAMiB,a","file":"static/js/main.86369cdd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport { highlight, languages } from 'prismjs'\r\nimport 'fontsource-fira-code'\r\nimport 'prismjs/components/prism-python'\r\nimport 'prismjs/components/prism-java'\r\nimport 'prismjs/components/prism-c'\r\nimport 'prismjs/themes/prism-twilight.css'\r\n\r\nconst PyEditor = ({ lang, code, setCode }) => {\r\n\tif (lang === 1) {\r\n\t\treturn (\r\n\t\t\t<div className='editor-wrap'>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\tvalue={code}\r\n\t\t\t\t\tonValueChange={(edcode) => setCode(edcode)}\r\n\t\t\t\t\thighlight={(edcode) => highlight(edcode, languages.py)}\r\n\t\t\t\t\tpadding={20}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\tbackground: '#1c67da',\r\n\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\tborderTopRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomLeftRadius: '50px',\r\n\t\t\t\t\t\tminHeight: '60vh',\r\n\t\t\t\t\t\tboxShadow: '7px 7px 5px rgba(0, 0, 0, 0.1)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else if (lang === 2) {\r\n\t\treturn (\r\n\t\t\t<div className='editor-wrap'>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\tvalue={code}\r\n\t\t\t\t\tonValueChange={(edcode) => setCode(edcode)}\r\n\t\t\t\t\thighlight={(edcode) => highlight(edcode, languages.java)}\r\n\t\t\t\t\tpadding={20}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\tbackground: '#1c67da',\r\n\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\tborderTopRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomLeftRadius: '50px',\r\n\t\t\t\t\t\tminHeight: '50vh',\r\n\t\t\t\t\t\tboxShadow: '7px 7px 5px rgba(0, 0, 0, 0.1)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='editor-wrap'>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\tvalue={code}\r\n\t\t\t\t\tonValueChange={(edcode) => setCode(edcode)}\r\n\t\t\t\t\thighlight={(edcode) => highlight(edcode, languages.c)}\r\n\t\t\t\t\tpadding={20}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\t\tbackground: '#1c67da',\r\n\t\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\t\tborderTopRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomRightRadius: '50px',\r\n\t\t\t\t\t\tborderBottomLeftRadius: '50px',\r\n\t\t\t\t\t\tminHeight: '50vh',\r\n\t\t\t\t\t\tboxShadow: '7px 7px 5px rgba(0, 0, 0, 0.1)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PyEditor\r\n","import React from 'react'\r\n\r\nconst Options = ({ lang, setLang, setCode, runCode }) => {\r\n\tconst handleLangChange = (e) => {\r\n\t\tsetLang(e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='options-wrap mt-3 p-3 blue-bg'>\r\n\t\t\t<h5 className='text-center'>Options</h5>\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<label>Select Language:</label>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={lang}\r\n\t\t\t\t\tonChange={handleLangChange}\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value={1}>Python</option>\r\n\t\t\t\t\t<option value={2}>Java</option>\r\n\t\t\t\t\t<option value={3}>C++</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<div className='options-button-parent'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => runCode()}\r\n\t\t\t\t\t\tclassName='btn shadow btn-success mt-5'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRun Code\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => setCode('Type your code here...')}\r\n\t\t\t\t\t\tclassName='btn shadow btn-danger mt-5'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tClear Code\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Options\r\n","import React from 'react'\r\n\r\nconst Input = ({ input, setInput }) => {\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInput(e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='input-wrap mt-3 p-3 blue-bg'>\r\n\t\t\t<h5 className='text-center'>Input</h5>\r\n\t\t\t<div className='form-group'>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tstyle={{ background: 'transparent', border: '0px' }}\r\n\t\t\t\t\tcols='30'\r\n\t\t\t\t\trows='5'\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nconst Output = ({ output }) => {\r\n\treturn (\r\n\t\t<div className='input-wrap mt-3 p-3 blue-bg'>\r\n\t\t\t<h5 className='text-center'>Output</h5>\r\n\t\t\t<textarea\r\n\t\t\t\tstyle={{ background: 'transparent', border: '0px' }}\r\n\t\t\t\tcols='30'\r\n\t\t\t\trows='5'\r\n\t\t\t\tclassName='form-control'\r\n\t\t\t\tvalue={output}\r\n\t\t\t\treadOnly\r\n\t\t\t></textarea>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Output\r\n","const keys = {\r\n\tid: '13b8a5eb8b858b39f04965178c4d3d8f',\r\n\tsecret: 'd458737deda4bd748cfa03c66e6847e088865087d29d7797d61e917dcd667685'\r\n}\r\n\r\nexport default keys\r\n","import React, { useState } from 'react'\n\nimport Editor from './components/Editor'\nimport Options from './components/Options'\nimport Input from './components/Input'\nimport Output from './components/Output'\n\nimport keys from './keys'\n\nconst App = () => {\n\tconst [lang, setLang] = useState(1)\n\tconst [code, setCode] = useState('Type your code here...')\n\tconst [input, setInput] = useState('Enter standard inputs here...')\n\tconst [output, setOutput] = useState('Output will appear here!')\n\n\tconst runCode = () => {\n\t\tlet api_lang = ''\n\n\t\tif (lang === 1) {\n\t\t\tapi_lang = 'python3'\n\t\t} else if (lang === 2) {\n\t\t\tapi_lang = 'java'\n\t\t} else {\n\t\t\tapi_lang = 'cpp'\n\t\t}\n\n\t\tconst data = {\n\t\t\tclientId: keys.id,\n\t\t\tclientSecret: keys.secret,\n\t\t\tscript: code,\n\t\t\tlanguage: api_lang,\n\t\t\tversionIndex: 0\n\t\t}\n\n\t\tfetch('https://api.jdoodle.com/v1/execute', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => setOutput(res.output))\n\t\t\t.catch((err) => setOutput('Something Went Wrong: ' + err.error))\n\t}\n\n\treturn (\n\t\t<div className='parent-row row'>\n\t\t\t<div className='col-md-9'>\n\t\t\t\t<Editor lang={lang} code={code} setCode={setCode} />\n\t\t\t</div>\n\t\t\t<div className='col-md-3 '>\n\t\t\t\t<Options\n\t\t\t\t\tlang={lang}\n\t\t\t\t\tsetLang={setLang}\n\t\t\t\t\tsetCode={setCode}\n\t\t\t\t\trunCode={runCode}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='col-md-6'>\n\t\t\t\t<div className='input-wrap mt-3 blue-bg'>\n\t\t\t\t\t<Input input={input} setInput={setInput} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='col-md-6'>\n\t\t\t\t<div className='output-wrap mt-3 blue-bg'>\n\t\t\t\t\t<Output output={output} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}